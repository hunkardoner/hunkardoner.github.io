<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Hünkar Döner</title>
    <link>https://hunk.ar/</link>
    <description>Recent content on Hünkar Döner</description>
    <image>
      <title>Hünkar Döner</title>
      <url>https://hunk.ar/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://hunk.ar/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>tr-TR</language>
    <lastBuildDate>Mon, 01 Apr 2024 09:03:20 -0800</lastBuildDate><atom:link href="https://hunk.ar/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Shopify 101: Ürünler XML Dosyası Oluşturma</title>
      <link>https://hunk.ar/posts/shopify-xml/</link>
      <pubDate>Mon, 01 Apr 2024 09:03:20 -0800</pubDate>
      
      <guid>https://hunk.ar/posts/shopify-xml/</guid>
      <description>Shopify kullanıcıları için bir çok işlem zulüm gelmekte. Yazılımcısını bulmak dert, müdahale edilebilirliği minimum düzeyde vs vs. Liquid zaten yaygın değil, işin ucundan tutmaya çalışan birinin bile çok kaynak bulamayacağı bir dil. Ama bakınca çok basit. Bugün ihtiyaç dahilinde kullanmak durumunda kaldığım bir koddan bahsedeceğim. {% layout none %}&amp;lt;?xml version=&amp;#34;1.0&amp;#34;?&amp;gt; &amp;lt;rss xmlns:g=&amp;#34;http://base.google.com/ns/1.0&amp;#34; version=&amp;#34;2.0&amp;#34;&amp;gt; {% paginate collection.products by 1000 %} {%- assign useSEOtitle = false -%} {%- assign useSEOdescription = true -%} {%- comment -%} TODO: Move this into a snippet and use capture to assign the variable {%- endcomment -%} {%- case shop.</description>
    </item>
    
    <item>
      <title>Terraform 101: İlk Adımlar</title>
      <link>https://hunk.ar/posts/ilk-adimlar/</link>
      <pubDate>Sun, 31 Dec 2023 09:03:20 -0800</pubDate>
      
      <guid>https://hunk.ar/posts/ilk-adimlar/</guid>
      <description>Bir önceki yazıda Terraform kurulumunu da tamamladık. Artık altyapınızı kodla yönetme işlemine hazırsınız demektir. Biz başlangıç tutoriallarımıza AWS servisiyle devam edeceğiz. İhtiyaç duymayana kadar tüm anlatımlarımız AWS üzerine olacaktır. Ancak yapısal benzerlikler çok fazla, o yüzden providerın hangisi olduğuna çok takılmanıza gerek yok. Var da yok ama olsun. İhtiyaç dahilinde Google Cloud, Azure gibi providerlar için de tutoriallar yapabiliriz. Konuyu çok uzatmadan devam edelim.
Kodlamaya başlamadan önceki ihtiyaçlar Terraform CLI (ki bunu bir önceki yazıda kurduk) AWS CLI (buradan adım adım öğrenebilirsiniz kurulumu, tıkla) Son olarak AWS erişimi için Access Key ve Secret Key Terraform CLI ve AWS CLI kurulumu oldukça basit aşamalar.</description>
    </item>
    
    <item>
      <title>Terraform 101: Kurulum</title>
      <link>https://hunk.ar/posts/terraform-kurulum/</link>
      <pubDate>Thu, 14 Dec 2023 09:03:20 -0800</pubDate>
      
      <guid>https://hunk.ar/posts/terraform-kurulum/</guid>
      <description>Bir önceki yazımızda IaC nedir, ne değildir, Terraform ne işe yarar gibi kısa bir özet geçtik. Yazılarımın asıl kaynağı terraform.io platformu. Oradaki dökümantasyonu Türkçe&amp;rsquo;ye çevirme ve ihtiyacımız olanları öne çıkarma taraftarıyım. Kafa karıştırma ihtimali olan kısımları dahil etmeyeceğim seriye. En basit düzeyde, ihtiyacımız kadar kullanacağız her aracı. Şahsi mentalitem bu, size dayatma gibi bir planım yok. Anlatacağım tüm yazılardaki araçların, dillerin hepsinin resmi dökümantasyonlarında daha fazla bilgiye erişebilirsiniz. Benim buradaki amacım DevOps Türkçe kaynağını arttırabilmek.</description>
    </item>
    
    <item>
      <title>Terraform 101: Infrastructure as Code (IaC) Nedir?</title>
      <link>https://hunk.ar/posts/iac-nedir/</link>
      <pubDate>Sun, 10 Dec 2023 09:03:20 -0800</pubDate>
      
      <guid>https://hunk.ar/posts/iac-nedir/</guid>
      <description>Altyapı Kodlama (IaC) araçları, altyapıyı grafiksel bir kullanıcı arayüzü yerine yapılandırma dosyaları aracılığıyla yönetmenizi sağlar. IaC, kaynak konfigürasyonlarını tanımlayarak altyapıyı güvenli, tutarlı ve tekrarlanabilir bir şekilde oluşturmanıza, değiştirmenize ve yönetmenize olanak tanır; bu konfigürasyonları sürümleyebilir, yeniden kullanabilir ve paylaşabilirsiniz.
Terraform, HashiCorp&amp;rsquo;un altyapı kodlama aracıdır. İnsan tarafından okunabilir, bildirgesel yapılandırma dosyalarında kaynakları ve altyapıyı tanımlamanıza olanak tanır ve altyapınızın yaşam döngüsünü yönetir. Terraform kullanmanın manuel olarak altyapınızı yönetmeye göre birkaç avantajı vardır:</description>
    </item>
    
  </channel>
</rss>
